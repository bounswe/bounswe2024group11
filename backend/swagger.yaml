swagger: '2.0'
info:
  title: API documentation
  description: API documentation
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@example.com
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /api/v1
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
    description: Use with "Bearer <YOUR_TOKEN_HERE>"
security:
- Bearer: []
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CustomTokenObtainPair'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPairResponse'
      tags:
      - auth
    parameters: []
  /auth/register/:
    post:
      operationId: auth_register_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Register'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/RegisterResponse'
      tags:
      - auth
    parameters: []
  /forum-answer-downvote/:
    get:
      operationId: forum-answer-downvote_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumAnswerDownvote'
      tags:
      - forum-answer-downvote
    post:
      operationId: forum-answer-downvote_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerDownvote'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerDownvote'
      tags:
      - forum-answer-downvote
    parameters: []
  /forum-answer-downvote/{id}/:
    get:
      operationId: forum-answer-downvote_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerDownvote'
      tags:
      - forum-answer-downvote
    put:
      operationId: forum-answer-downvote_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerDownvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerDownvote'
      tags:
      - forum-answer-downvote
    patch:
      operationId: forum-answer-downvote_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerDownvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerDownvote'
      tags:
      - forum-answer-downvote
    delete:
      operationId: forum-answer-downvote_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-answer-downvote
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum answer downvote.
      required: true
      type: integer
  /forum-answer-upvote/:
    get:
      operationId: forum-answer-upvote_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumAnswerUpvote'
      tags:
      - forum-answer-upvote
    post:
      operationId: forum-answer-upvote_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerUpvote'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerUpvote'
      tags:
      - forum-answer-upvote
    parameters: []
  /forum-answer-upvote/{id}/:
    get:
      operationId: forum-answer-upvote_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerUpvote'
      tags:
      - forum-answer-upvote
    put:
      operationId: forum-answer-upvote_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerUpvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerUpvote'
      tags:
      - forum-answer-upvote
    patch:
      operationId: forum-answer-upvote_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswerUpvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswerUpvote'
      tags:
      - forum-answer-upvote
    delete:
      operationId: forum-answer-upvote_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-answer-upvote
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum answer upvote.
      required: true
      type: integer
  /forum-bookmarks/:
    get:
      operationId: forum-bookmarks_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumBookmark'
      tags:
      - forum-bookmarks
    post:
      operationId: forum-bookmarks_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumBookmark'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumBookmark'
      tags:
      - forum-bookmarks
    parameters: []
  /forum-bookmarks/{id}/:
    get:
      operationId: forum-bookmarks_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumBookmark'
      tags:
      - forum-bookmarks
    put:
      operationId: forum-bookmarks_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumBookmark'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumBookmark'
      tags:
      - forum-bookmarks
    patch:
      operationId: forum-bookmarks_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumBookmark'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumBookmark'
      tags:
      - forum-bookmarks
    delete:
      operationId: forum-bookmarks_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-bookmarks
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum bookmark.
      required: true
      type: integer
  /forum-downvote/:
    get:
      operationId: forum-downvote_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumDownvote'
      tags:
      - forum-downvote
    post:
      operationId: forum-downvote_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumDownvote'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumDownvote'
      tags:
      - forum-downvote
    parameters: []
  /forum-downvote/{id}/:
    get:
      operationId: forum-downvote_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumDownvote'
      tags:
      - forum-downvote
    put:
      operationId: forum-downvote_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumDownvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumDownvote'
      tags:
      - forum-downvote
    patch:
      operationId: forum-downvote_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumDownvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumDownvote'
      tags:
      - forum-downvote
    delete:
      operationId: forum-downvote_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-downvote
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum downvote.
      required: true
      type: integer
  /forum-questions/:
    get:
      operationId: forum-questions_list
      description: Handle pagination explicitly.
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumQuestion'
      tags:
      - forum-questions
    post:
      operationId: forum-questions_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumQuestion'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumQuestion'
      tags:
      - forum-questions
    parameters: []
  /forum-questions/{forum_question_pk}/answers/:
    get:
      operationId: forum-questions_answers_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumAnswer'
      tags:
      - forum-questions
    post:
      operationId: forum-questions_answers_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswer'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswer'
      tags:
      - forum-questions
    parameters:
    - name: forum_question_pk
      in: path
      required: true
      type: string
  /forum-questions/{forum_question_pk}/answers/{id}/:
    get:
      operationId: forum-questions_answers_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswer'
      tags:
      - forum-questions
    put:
      operationId: forum-questions_answers_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswer'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswer'
      tags:
      - forum-questions
    patch:
      operationId: forum-questions_answers_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumAnswer'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumAnswer'
      tags:
      - forum-questions
    delete:
      operationId: forum-questions_answers_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-questions
    parameters:
    - name: forum_question_pk
      in: path
      required: true
      type: string
    - name: id
      in: path
      description: A unique integer value identifying this forum answer.
      required: true
      type: integer
  /forum-questions/{id}/:
    get:
      operationId: forum-questions_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumQuestion'
      tags:
      - forum-questions
    put:
      operationId: forum-questions_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumQuestion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumQuestion'
      tags:
      - forum-questions
    patch:
      operationId: forum-questions_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumQuestion'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumQuestion'
      tags:
      - forum-questions
    delete:
      operationId: forum-questions_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-questions
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum question.
      required: true
      type: integer
  /forum-upvote/:
    get:
      operationId: forum-upvote_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ForumUpvote'
      tags:
      - forum-upvote
    post:
      operationId: forum-upvote_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumUpvote'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ForumUpvote'
      tags:
      - forum-upvote
    parameters: []
  /forum-upvote/{id}/:
    get:
      operationId: forum-upvote_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumUpvote'
      tags:
      - forum-upvote
    put:
      operationId: forum-upvote_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumUpvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumUpvote'
      tags:
      - forum-upvote
    patch:
      operationId: forum-upvote_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ForumUpvote'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ForumUpvote'
      tags:
      - forum-upvote
    delete:
      operationId: forum-upvote_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - forum-upvote
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this forum upvote.
      required: true
      type: integer
  /quizzes/:
    get:
      operationId: quizzes_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Quiz'
      tags:
      - quizzes
    post:
      operationId: quizzes_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Quiz'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Quiz'
      tags:
      - quizzes
    parameters: []
  /quizzes/{id}/:
    get:
      operationId: quizzes_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Quiz'
      tags:
      - quizzes
    put:
      operationId: quizzes_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Quiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Quiz'
      tags:
      - quizzes
    patch:
      operationId: quizzes_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Quiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Quiz'
      tags:
      - quizzes
    delete:
      operationId: quizzes_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - quizzes
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this quiz.
      required: true
      type: integer
  /rate-quiz/:
    get:
      operationId: rate-quiz_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/RateQuiz'
      tags:
      - rate-quiz
    post:
      operationId: rate-quiz_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RateQuiz'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/RateQuiz'
      tags:
      - rate-quiz
    parameters: []
  /rate-quiz/{id}/:
    get:
      operationId: rate-quiz_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RateQuiz'
      tags:
      - rate-quiz
    put:
      operationId: rate-quiz_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RateQuiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RateQuiz'
      tags:
      - rate-quiz
    patch:
      operationId: rate-quiz_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/RateQuiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/RateQuiz'
      tags:
      - rate-quiz
    delete:
      operationId: rate-quiz_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - rate-quiz
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this rate quiz.
      required: true
      type: integer
  /tagging/:
    get:
      operationId: tagging_list
      description: ''
      parameters:
      - name: word
        in: query
        description: Word to search
        type: string
      - name: lang
        in: query
        description: Language of the word
        type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaggedWord'
      tags:
      - tagging
    parameters: []
  /take-quiz/:
    get:
      operationId: take-quiz_list
      description: ''
      parameters:
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/TakeQuiz'
      tags:
      - take-quiz
    post:
      operationId: take-quiz_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TakeQuiz'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TakeQuiz'
      tags:
      - take-quiz
    parameters: []
  /take-quiz/{id}/:
    get:
      operationId: take-quiz_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TakeQuiz'
      tags:
      - take-quiz
    put:
      operationId: take-quiz_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TakeQuiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TakeQuiz'
      tags:
      - take-quiz
    patch:
      operationId: take-quiz_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TakeQuiz'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TakeQuiz'
      tags:
      - take-quiz
    delete:
      operationId: take-quiz_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - take-quiz
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this take quiz.
      required: true
      type: integer
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefreshResponse'
      tags:
      - token
    parameters: []
  /token/verify/:
    post:
      operationId: token_verify_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenVerify'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerifyResponse'
      tags:
      - token
    parameters: []
definitions:
  CustomTokenObtainPair:
    required:
    - username
    - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  UserResponse:
    required:
    - username
    - email
    - full_name
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      full_name:
        title: Full name
        type: string
        minLength: 1
  TokenObtainPairResponse:
    required:
    - access
    - refresh
    - user
    type: object
    properties:
      access:
        title: Access
        type: string
        minLength: 1
      refresh:
        title: Refresh
        type: string
        minLength: 1
      user:
        $ref: '#/definitions/UserResponse'
  Register:
    required:
    - username
    - password
    - email
    - full_name
    type: object
    properties:
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      full_name:
        title: Full name
        type: string
        maxLength: 100
        minLength: 1
      avatar:
        title: Avatar
        type: string
        maxLength: 1000
        x-nullable: true
  RegisterResponse:
    required:
    - access
    - refresh
    type: object
    properties:
      access:
        title: Access
        type: string
        minLength: 1
      refresh:
        title: Refresh
        type: string
        minLength: 1
  ForumAnswerDownvote:
    required:
    - forum_answer
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
      forum_answer:
        title: Forum answer
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  ForumAnswerUpvote:
    required:
    - forum_answer
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
      forum_answer:
        title: Forum answer
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  ForumBookmark:
    required:
    - forum_question
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
      forum_question:
        title: Forum question
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  ForumDownvote:
    required:
    - forum_question
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
      forum_question:
        title: Forum question
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  Tag:
    required:
    - name
    - linked_data_id
    - description
    type: object
    properties:
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      linked_data_id:
        title: Linked data id
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 1000
        minLength: 1
  UserInfo:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        readOnly: true
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        readOnly: true
        minLength: 1
      full_name:
        title: Full name
        type: string
        readOnly: true
        minLength: 1
      avatar:
        title: Avatar
        type: string
        readOnly: true
        minLength: 1
        x-nullable: true
  ForumAnswer:
    required:
    - answer
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      answer:
        title: Answer
        type: string
        maxLength: 1000
        minLength: 1
      author:
        $ref: '#/definitions/UserInfo'
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      is_my_answer:
        title: Is my answer
        type: string
        readOnly: true
      is_upvoted:
        title: Is upvoted
        type: string
        readOnly: true
      is_downvoted:
        title: Is downvoted
        type: string
        readOnly: true
      upvotes_count:
        title: Upvotes count
        type: string
        readOnly: true
      downvotes_count:
        title: Downvotes count
        type: string
        readOnly: true
  ForumQuestion:
    required:
    - title
    - question
    - tags
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 100
        minLength: 1
      question:
        title: Question
        type: string
        maxLength: 1000
        minLength: 1
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      author:
        $ref: '#/definitions/UserInfo'
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      answers_count:
        title: Answers count
        type: string
        readOnly: true
      is_bookmarked:
        title: Is bookmarked
        type: string
        readOnly: true
      is_upvoted:
        title: Is upvoted
        type: string
        readOnly: true
      upvotes_count:
        title: Upvotes count
        type: string
        readOnly: true
      is_downvoted:
        title: Is downvoted
        type: string
        readOnly: true
      downvotes_count:
        title: Downvotes count
        type: string
        readOnly: true
      answers:
        type: array
        items:
          $ref: '#/definitions/ForumAnswer'
        readOnly: true
  ForumUpvote:
    required:
    - forum_question
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: integer
        readOnly: true
      forum_question:
        title: Forum question
        type: integer
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  QuizQuestionChoice:
    required:
    - choice_text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      choice_text:
        title: Choice text
        type: string
        maxLength: 255
        minLength: 1
      is_correct:
        title: Is correct
        type: boolean
  QuizQuestion:
    required:
    - question_text
    - choices
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      question_text:
        title: Question text
        type: string
        maxLength: 1000
        minLength: 1
      choices:
        type: array
        items:
          $ref: '#/definitions/QuizQuestionChoice'
  Quiz:
    required:
    - title
    - description
    - tags
    - type
    - questions
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      difficulty:
        title: Difficulty
        type: integer
        enum:
        - 1
        - 2
        - 3
        - 4
        readOnly: true
      author:
        $ref: '#/definitions/UserInfo'
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      type:
        title: Type
        type: integer
        enum:
        - 1
        - 2
        - 3
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      questions:
        type: array
        items:
          $ref: '#/definitions/QuizQuestion'
      num_taken:
        title: Num taken
        type: string
        readOnly: true
      is_taken:
        title: Is taken
        type: string
        readOnly: true
      rating:
        title: Rating
        type: string
        readOnly: true
  RateQuiz:
    required:
    - quiz
    - rating
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      quiz:
        title: Quiz
        type: integer
      rating:
        title: Rating
        type: integer
        maximum: 5
        minimum: 1
      user:
        title: User
        type: integer
        readOnly: true
  WordDefinition:
    required:
    - id
    - definition
    type: object
    properties:
      id:
        title: Id
        description: Unique ID for the word definition
        type: integer
      definition:
        title: Definition
        description: Definition of the word
        type: string
        minLength: 1
  TaggedWord:
    type: object
    properties:
      ADV:
        description: List of adverbs with their definitions
        type: array
        items:
          $ref: '#/definitions/WordDefinition'
      VERB:
        description: List of verbs with their definitions
        type: array
        items:
          $ref: '#/definitions/WordDefinition'
      ADJ:
        description: List of adjectives with their definitions
        type: array
        items:
          $ref: '#/definitions/WordDefinition'
      NOUN:
        description: List of nouns with their definitions
        type: array
        items:
          $ref: '#/definitions/WordDefinition'
  UserAnswer:
    required:
    - question
    - answer
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      take_quiz:
        title: Take quiz
        type: integer
        readOnly: true
        x-nullable: true
      question:
        title: Question
        type: integer
      answer:
        title: Answer
        type: integer
  TakeQuiz:
    required:
    - quiz
    - answers
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      quiz:
        title: Quiz
        type: integer
      user:
        title: User
        type: integer
        readOnly: true
      date:
        title: Date
        type: string
        format: date-time
        readOnly: true
      answers:
        type: array
        items:
          $ref: '#/definitions/UserAnswer'
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  TokenRefreshResponse:
    required:
    - access
    type: object
    properties:
      access:
        title: Access
        type: string
        minLength: 1
  TokenVerify:
    required:
    - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  TokenVerifyResponse:
    type: object
    properties: {}
